var ot = Object.defineProperty;
var it = (e, t, n) => t in e ? ot(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[t] = n;
var H = (e, t, n) => (it(e, typeof t != "symbol" ? t + "" : t, n), n), I = (e, t, n) => {
  if (!t.has(e))
    throw TypeError("Cannot " + n);
};
var d = (e, t, n) => (I(e, t, "read from private field"), n ? n.call(e) : t.get(e)), C = (e, t, n) => {
  if (t.has(e))
    throw TypeError("Cannot add the same private member more than once");
  t instanceof WeakSet ? t.add(e) : t.set(e, n);
}, k = (e, t, n, o) => (I(e, t, "write to private field"), o ? o.call(e, n) : t.set(e, n), n);
const st = (e, t, n, o, s) => {
  const f = n.length;
  let a = t.length, i = f, r = 0, p = 0, l = null;
  for (; r < a || p < i; )
    if (a === r) {
      const c = i < f ? p ? o(n[p - 1], -0).nextSibling : o(n[i], 0) : s;
      for (; p < i; )
        e.insertBefore(o(n[p++], 1), c);
    } else if (i === p)
      for (; r < a; )
        (!l || !l.has(t[r])) && e.removeChild(o(t[r], -1)), r++;
    else if (t[r] === n[p])
      r++, p++;
    else if (t[a - 1] === n[i - 1])
      a--, i--;
    else if (t[r] === n[i - 1] && n[p] === t[a - 1]) {
      const c = o(t[--a], -0).nextSibling;
      e.insertBefore(
        o(n[p++], 1),
        o(t[r++], -0).nextSibling
      ), e.insertBefore(o(n[--i], 1), c), t[a] = n[i];
    } else {
      if (!l) {
        l = /* @__PURE__ */ new Map();
        let c = p;
        for (; c < i; )
          l.set(n[c], c++);
      }
      if (l.has(t[r])) {
        const c = l.get(t[r]);
        if (p < c && c < i) {
          let m = r, u = 1;
          for (; ++m < a && m < i && l.get(t[m]) === c + u; )
            u++;
          if (u > c - p) {
            const U = o(t[r], 0);
            for (; p < c; )
              e.insertBefore(o(n[p++], 1), U);
          } else
            e.replaceChild(
              o(n[p++], 1),
              o(t[r++], -1)
            );
        } else
          r++;
      } else
        e.removeChild(o(t[r++], -1));
    }
  return n;
}, { isArray: Z } = Array, { getPrototypeOf: rt, getOwnPropertyDescriptor: at } = Object, ct = "http://www.w3.org/2000/svg", g = [], q = () => document.createRange(), W = (e, t, n) => (e.set(t, n), n), lt = (e, t) => {
  let n;
  do
    n = at(e, t);
  while (!n && (e = rt(e)));
  return n;
}, ft = (e, t) => t.reduceRight(pt, e), pt = (e, t) => e.childNodes[t], mt = 1, ut = 8, dt = 11, { setPrototypeOf: ht } = Object, gt = (e) => {
  function t(n) {
    return ht(n, new.target.prototype);
  }
  return t.prototype = e.prototype, t;
};
let w;
const X = (e, t, n) => (w || (w = q()), n ? w.setStartAfter(e) : w.setStartBefore(e), w.setEndAfter(t), w.deleteContents(), e), $ = ({ firstChild: e, lastChild: t }, n) => X(e, t, n);
let R = !1;
const T = (e, t) => R && e.nodeType === dt ? 1 / t < 0 ? t ? $(e, !0) : e.lastChild : t ? e.valueOf() : e.firstChild : e, z = (e) => document.createComment(e);
var y, E, h;
class Ut extends gt(DocumentFragment) {
  constructor(n) {
    super(n);
    C(this, y, z("<>"));
    C(this, E, z("</>"));
    C(this, h, g);
    this.replaceChildren(d(this, y), ...n.childNodes, d(this, E)), R = !0;
  }
  get firstChild() {
    return d(this, y);
  }
  get lastChild() {
    return d(this, E);
  }
  get parentNode() {
    return d(this, y).parentNode;
  }
  remove() {
    $(this, !1);
  }
  replaceWith(n) {
    $(this, !0).replaceWith(n);
  }
  valueOf() {
    const { parentNode: n } = this;
    if (n === this)
      d(this, h) === g && k(this, h, [...this.childNodes]);
    else {
      if (n) {
        let { firstChild: o, lastChild: s } = this;
        for (k(this, h, [o]); o !== s; )
          d(this, h).push(o = o.nextSibling);
      }
      this.replaceChildren(...d(this, h));
    }
    return this;
  }
}
y = new WeakMap(), E = new WeakMap(), h = new WeakMap();
const Q = (e, t, n) => e.setAttribute(t, n), S = (e, t) => e.removeAttribute(t), wt = (e, t) => {
  for (const n in t) {
    const o = t[n], s = n === "role" ? n : `aria-${n}`;
    o == null ? S(e, s) : Q(e, s, o);
  }
  return t;
};
let v;
const yt = (e, t, n) => {
  n = n.slice(1), v || (v = /* @__PURE__ */ new WeakMap());
  const o = v.get(e) || W(v, e, {});
  let s = o[n];
  return s && s[0] && e.removeEventListener(n, ...s), s = Z(t) ? t : [t, !1], o[n] = s, s[0] && e.addEventListener(n, ...s), t;
}, F = (e, t) => {
  const { t: n, n: o } = e;
  let s = !1;
  switch (typeof t) {
    case "object":
      if (t !== null) {
        (o || n).replaceWith(e.n = t.valueOf());
        break;
      }
    case "undefined":
      s = !0;
    default:
      n.data = s ? "" : t, o && (e.n = null, o.replaceWith(n));
      break;
  }
  return t;
}, xt = (e, t) => j(
  e,
  t,
  t == null ? "class" : "className"
), bt = (e, t) => {
  const { dataset: n } = e;
  for (const o in t)
    t[o] == null ? delete n[o] : n[o] = t[o];
  return t;
}, D = (e, t, n) => e[n] = t, Ft = (e, t, n) => D(e, t, n.slice(1)), j = (e, t, n) => t == null ? (S(e, n), t) : D(e, t, n), Y = (e, t) => (typeof t == "function" ? t(e) : t.current = e, t), B = (e, t, n) => (t == null ? S(e, n) : Q(e, n, t), t), Et = (e, t) => t == null ? j(e, t, "style") : D(e.style, t, "cssText"), At = (e, t, n) => (e.toggleAttribute(n.slice(1), t), t), _ = (e, t, n) => {
  const { length: o } = t;
  if (e.data = `[${o}]`, o)
    return st(e.parentNode, n, t, T, e);
  switch (n.length) {
    case 1:
      n[0].remove();
    case 0:
      break;
    default:
      X(
        T(n[0], 0),
        T(n.at(-1), -0),
        !1
      );
      break;
  }
  return g;
}, Ct = /* @__PURE__ */ new Map([
  ["aria", wt],
  ["class", xt],
  ["data", bt],
  ["ref", Y],
  ["style", Et]
]), vt = (e, t, n) => {
  switch (t[0]) {
    case ".":
      return Ft;
    case "?":
      return At;
    case "@":
      return yt;
    default:
      return n || "ownerSVGElement" in e ? t === "ref" ? Y : B : Ct.get(t) || (t in e ? t.startsWith("on") ? D : lt(e, t)?.set ? j : B : B);
  }
}, Mt = (e, t) => (e.textContent = t ?? "", t), b = (e, t, n) => ({ a: e, b: t, c: n }), _t = (e, t) => ({ b: e, c: t }), St = (e, t, n, o) => ({ v: g, u: e, t, n, c: o }), A = () => b(null, null, g), tt = (e) => (t, n) => {
  const { a: o, b: s, c: f } = e(t, n), a = document.importNode(o, !0);
  let i = g;
  if (s !== g) {
    i = [];
    for (let r, p, l = 0; l < s.length; l++) {
      const { a: c, b: m, c: u } = s[l], U = c === p ? r : r = ft(a, p = c);
      i[l] = St(
        m,
        U,
        u,
        m === _ ? [] : m === F ? A() : null
      );
    }
  }
  return _t(
    f ? a.firstChild : new Ut(a),
    i
  );
}, Dt = /^(?:plaintext|script|style|textarea|title|xmp)$/i, kt = /^(?:area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr)$/i, Tt = /<([a-zA-Z0-9]+[a-zA-Z0-9:._-]*)([^>]*?)(\/?)>/g, Bt = /([^\s\\>"'=]+)\s*=\s*(['"]?)\x01/g, Lt = /[\x01\x02]/g, Nt = (e, t, n) => {
  let o = 0;
  return e.join("").trim().replace(
    Tt,
    (s, f, a, i) => `<${f}${a.replace(Bt, "=$2$1").trimEnd()}${i ? n || kt.test(f) ? " /" : `></${f}` : ""}>`
  ).replace(
    Lt,
    (s) => s === "" ? `<!--${t + o++}-->` : t + o++
  );
};
let M = document.createElement("template"), L, N;
const Ot = (e, t) => {
  if (t)
    return L || (L = document.createElementNS(ct, "svg"), N = q(), N.selectNodeContents(L)), N.createContextualFragment(e);
  M.innerHTML = e;
  const { content: n } = M;
  return M = M.cloneNode(!1), n;
}, O = (e) => {
  const t = [];
  let n;
  for (; n = e.parentNode; )
    t.push(t.indexOf.call(n.childNodes, e)), e = n;
  return t;
}, P = () => document.createTextNode(""), $t = (e, t, n) => {
  const o = Ot(Nt(e, x, n), n), { length: s } = e;
  let f = g;
  if (s > 1) {
    const r = [], p = document.createTreeWalker(o, 129);
    let l = 0, c = `${x}${l++}`;
    for (f = []; l < s; ) {
      const m = p.nextNode();
      if (m.nodeType === ut) {
        if (m.data === c) {
          const u = Z(t[l - 1]) ? _ : F;
          u === F && r.push(m), f.push(b(O(m), u, null)), c = `${x}${l++}`;
        }
      } else {
        let u;
        for (; m.hasAttribute(c); ) {
          u || (u = O(m));
          const U = m.getAttribute(c);
          f.push(b(u, vt(m, U, n), U)), S(m, c), c = `${x}${l++}`;
        }
        !n && Dt.test(m.localName) && m.textContent.trim() === `<!--${c}-->` && (f.push(b(u || O(m), Mt, null)), c = `${x}${l++}`);
      }
    }
    for (l = 0; l < r.length; l++)
      r[l].replaceWith(P());
  }
  const { childNodes: a } = o;
  let { length: i } = a;
  return i < 1 ? (i = 1, o.appendChild(P())) : i === 1 && s !== 1 && a[0].nodeType !== mt && (i = 0), W(et, e, b(o, f, i === 1));
}, et = /* @__PURE__ */ new WeakMap(), x = "is\xB5", nt = (e) => (t, n) => et.get(t) || $t(t, n, e), Wt = tt(nt(!1)), jt = tt(nt(!0)), K = (e, { s: t, t: n, v: o }) => {
  if (e.a !== n) {
    const { b: s, c: f } = (t ? jt : Wt)(n, o);
    e.a = n, e.b = s, e.c = f;
  }
  for (let { c: s } = e, f = 0; f < s.length; f++) {
    const a = o[f], i = s[f];
    switch (i.u) {
      case _:
        i.v = _(
          i.t,
          Kt(i.c, a),
          i.v
        );
        break;
      case F:
        const r = a instanceof V ? K(i.c || (i.c = A()), a) : (i.c = null, a);
        r !== i.v && (i.v = F(i, r));
        break;
      default:
        a !== i.v && (i.v = i.u(i.t, a, i.n, i.v));
        break;
    }
  }
  return e.b;
}, Kt = (e, t) => {
  let n = 0, { length: o } = t;
  for (o < e.length && e.splice(o); n < o; n++) {
    const s = t[n];
    s instanceof V ? t[n] = K(e[n] || (e[n] = A()), s) : e[n] = null;
  }
  return t;
};
class V {
  constructor(t, n, o) {
    this.s = t, this.t = n, this.v = o;
  }
  toDOM(t = A()) {
    return K(t, this);
  }
}
const G = /* @__PURE__ */ new WeakMap(), Vt = (e, t) => {
  const n = G.get(e) || W(G, e, A()), { b: o } = n;
  return o !== (typeof t == "function" ? t() : t).toDOM(n) && e.replaceChildren(n.b.valueOf()), e;
};
/*! (c) Andrea Giammarchi - MIT */
const Ht = (e) => (t, ...n) => new V(e, t, n), It = Ht(!1), zt = `
  /* Font definitions */
  /* cyrillic-ext */
  @font-face {
    font-family: 'Inter';
    font-style: normal;
    font-weight: 400;
    src: url(https://fonts.gstatic.com/s/inter/v18/UcCO3FwrK3iLTeHuS_nVMrMxCp50SjIw2boKoduKmMEVuLyfAZJhiJ-Ek-_EeAmM.woff2) format('woff2');
    unicode-range: U+0460-052F, U+1C80-1C8A, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
  }
  /* cyrillic */
  @font-face {
    font-family: 'Inter';
    font-style: normal;
    font-weight: 400;
    src: url(https://fonts.gstatic.com/s/inter/v18/UcCO3FwrK3iLTeHuS_nVMrMxCp50SjIw2boKoduKmMEVuLyfAZthiJ-Ek-_EeAmM.woff2) format('woff2');
    unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
  }
  /* greek-ext */
  @font-face {
    font-family: 'Inter';
    font-style: normal;
    font-weight: 400;
    src: url(https://fonts.gstatic.com/s/inter/v18/UcCO3FwrK3iLTeHuS_nVMrMxCp50SjIw2boKoduKmMEVuLyfAZNhiJ-Ek-_EeAmM.woff2) format('woff2');
    unicode-range: U+1F00-1FFF;
  }
  /* greek */
  @font-face {
    font-family: 'Inter';
    font-style: normal;
    font-weight: 400;
    src: url(https://fonts.gstatic.com/s/inter/v18/UcCO3FwrK3iLTeHuS_nVMrMxCp50SjIw2boKoduKmMEVuLyfAZxhiJ-Ek-_EeAmM.woff2) format('woff2');
    unicode-range: U+0370-0377, U+037A-037F, U+0384-038A, U+038C, U+038E-03A1, U+03A3-03FF;
  }
  /* vietnamese */
  @font-face {
    font-family: 'Inter';
    font-style: normal;
    font-weight: 400;
    src: url(https://fonts.gstatic.com/s/inter/v18/UcCO3FwrK3iLTeHuS_nVMrMxCp50SjIw2boKoduKmMEVuLyfAZBhiJ-Ek-_EeAmM.woff2) format('woff2');
    unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+0300-0301, U+0303-0304, U+0308-0309, U+0323, U+0329, U+1EA0-1EF9, U+20AB;
  }
  /* latin-ext */
  @font-face {
    font-family: 'Inter';
    font-style: normal;
    font-weight: 400;
    src: url(https://fonts.gstatic.com/s/inter/v18/UcCO3FwrK3iLTeHuS_nVMrMxCp50SjIw2boKoduKmMEVuLyfAZFhiJ-Ek-_EeAmM.woff2) format('woff2');
    unicode-range: U+0100-02BA, U+02BD-02C5, U+02C7-02CC, U+02CE-02D7, U+02DD-02FF, U+0304, U+0308, U+0329, U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
  }
  /* latin */
  @font-face {
    font-family: 'Inter';
    font-style: normal;
    font-weight: 400;
    src: url(https://fonts.gstatic.com/s/inter/v18/UcCO3FwrK3iLTeHuS_nVMrMxCp50SjIw2boKoduKmMEVuLyfAZ9hiJ-Ek-_EeA.woff2) format('woff2');
    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
  }

  /* Mulish font faces */
  /* cyrillic-ext */
  @font-face {
    font-family: 'Mulish';
    font-style: normal;
    font-weight: 600;
    src: url(https://fonts.gstatic.com/s/mulish/v13/1Ptyg83HX_SGhgqO0yLcmjzUAuWexU1W8aqvG547LTdNwPak.woff2) format('woff2');
    unicode-range: U+0460-052F, U+1C80-1C8A, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
  }
  /* cyrillic */
  @font-face {
    font-family: 'Mulish';
    font-style: normal;
    font-weight: 600;
    src: url(https://fonts.gstatic.com/s/mulish/v13/1Ptyg83HX_SGhgqO0yLcmjzUAuWexU1W8aOvG547LTdNwPak.woff2) format('woff2');
    unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
  }
  /* vietnamese */
  @font-face {
    font-family: 'Mulish';
    font-style: normal;
    font-weight: 600;
    src: url(https://fonts.gstatic.com/s/mulish/v13/1Ptyg83HX_SGhgqO0yLcmjzUAuWexU1W8aivG547LTdNwPak.woff2) format('woff2');
    unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+0300-0301, U+0303-0304, U+0308-0309, U+0323, U+0329, U+1EA0-1EF9, U+20AB;
  }
  /* latin-ext */
  @font-face {
    font-family: 'Mulish';
    font-style: normal;
    font-weight: 600;
    src: url(https://fonts.gstatic.com/s/mulish/v13/1Ptyg83HX_SGhgqO0yLcmjzUAuWexU1W8amvG547LTdNwPak.woff2) format('woff2');
    unicode-range: U+0100-02BA, U+02BD-02C5, U+02C7-02CC, U+02CE-02D7, U+02DD-02FF, U+0304, U+0308, U+0329, U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
  }
  /* latin */
  @font-face {
    font-family: 'Mulish';
    font-style: normal;
    font-weight: 600;
    src: url(https://fonts.gstatic.com/s/mulish/v13/1Ptyg83HX_SGhgqO0yLcmjzUAuWexU1W8aevG547LTdNwA.woff2) format('woff2');
    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
  }

  /* These global styles should be scoped to the banner */
  .anima-banner * {
    -webkit-font-smoothing: antialiased;
    box-sizing: border-box;
  }

  /* These should be scoped to banner elements */
  .anima-banner button:focus-visible {
    outline: 2px solid #4a90e2 !important;
    outline: -webkit-focus-ring-color auto 5px !important;
  }

  .anima-banner a {
    text-decoration: none;
  }

  /* Variables should be scoped to the banner */
  .anima-banner {
    --text-medium-sm-font-family: "Mulish", Helvetica;
    --text-medium-sm-font-weight: 600;
    --text-medium-sm-font-size: 12px;
    --text-medium-sm-letter-spacing: 0px;
    --text-medium-sm-line-height: 160.0000023841858%;
    --text-medium-sm-font-style: normal;
    --colors-purple-purple-8: rgba(168, 152, 236, 1);
    --colors-grey-grey-6: rgba(226, 226, 223, 1);
    --colors-purple-purple-11: rgba(87, 70, 175, 1);
  }

  /* Component styles */
  .anima-banner {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 9999;
    display: flex;
    height: 48px;
    align-items: center;
    justify-content: center;
    gap: 10px;
    background-color: #101729;
    border-bottom: 3px solid #6c53ce;
  }

  .anima-banner .text-wrapper {
    position: relative;
    width: fit-content;
    font-family: "Inter", Helvetica;
    font-weight: 400;
    color: #f2f5f9;
    font-size: 14px;
    text-align: center;
    letter-spacing: 0;
    line-height: normal;
  }

  .anima-banner .anima-playground {
    position: relative;
    width: 175px;
    height: 24px;
  }

  .anima-banner .anima-logo {
    position: absolute;
    width: 24px;
    height: 24px;
    top: 0;
    left: 0;
  }

  .anima-banner .playground-text {
    position: absolute;
    top: 3px;
    left: 84px;
    font-family: "Mulish", Helvetica;
    font-weight: 600;
    color: var(--colors-purple-purple-8);
    font-size: 17px;
    letter-spacing: 0;
    line-height: 15.8px;
    white-space: nowrap;
  }

  .anima-banner .text-wrapper-2 {
    position: absolute;
    top: 3px;
    left: 28px;
    font-family: "Mulish", Helvetica;
    font-weight: 600;
    color: #ffffff;
    font-size: 17px;
    letter-spacing: 0;
    line-height: 15.8px;
    white-space: nowrap;
  }

  .anima-banner .button {
    all: unset;
    box-sizing: border-box;
    display: inline-flex;
    height: 28px;
    align-items: center;
    justify-content: center;
    gap: 8px;
    padding: 0px 12px;
    position: relative;
    flex: 0 0 auto;
    background-color: var(--colors-purple-purple-11);
    border-radius: 6px;
    cursor: pointer;
  }

  .anima-banner .button:hover {
    opacity: 0.9;
  }

  .anima-banner .label {
    position: relative;
    width: fit-content;
    font-family: var(--text-medium-sm-font-family);
    font-weight: var(--text-medium-sm-font-weight);
    color: var(--colors-grey-grey-6);
    font-size: var(--text-medium-sm-font-size);
    letter-spacing: var(--text-medium-sm-letter-spacing);
    line-height: var(--text-medium-sm-line-height);
    white-space: nowrap;
    font-style: var(--text-medium-sm-font-style);
  }

  /* Responsive styles */
  @media screen and (max-width: 768px) {
    .hide-tablet {
      display: none;
    }
    
    .anima-banner {
      gap: 8px;
    }
  }

  @media screen and (max-width: 480px) {
    .anima-banner {
      gap: 6px;
    }

    .hide-mobile {
      display: none;
    }

    .anima-banner .text-wrapper {
      font-size: 12px;
    }
    
    .anima-banner .anima-playground {
      width: 150px;
    }
    
    .anima-banner .div,
    .anima-banner .text-wrapper-2 {
      font-size: 15px;
    }
  }
`, Pt = ({ onStartNowClick: e, startNowUrl: t }) => It`
  <style>${zt}</style>
  <div class="anima-banner">
    <div class="text-wrapper">Generated by</div>
    <div class="anima-playground">
      <img class="anima-logo" src="https://c.animaapp.com/e9Mp3I1b/img/anima-logo.svg" />
      <div class="text-wrapper-2">anima</div>
      <div class="playground-text hide-mobile">playground</div>
    </div>
    <p class="text-wrapper hide-tablet">Turn your own designs to code today</p>
    <a href="${t}" target="_blank" onclick=${() => {
  e && e();
}} class="button"><div class="label">Start now</div></a>
  </div>
`, Gt = (e) => fetch("https://l.animaapp.com/analytics/collect", {
  method: "POST",
  headers: {
    "Content-Type": "application/json",
    "X-Client-Id": "dev.animaapp.io"
  },
  body: JSON.stringify(e)
}).catch(() => {
}), J = (e, t = {}) => {
  const n = {
    eventAction: e,
    params: {
      platform: "playground-website",
      origin: "playground-website",
      ...t,
      domain: window.location.hostname,
      url: window.location.href
    },
    time: new Date().getTime()
  };
  return Gt([n]);
};
class Jt {
  constructor() {
    H(this, "data");
    this.data = window.__anima__, document.addEventListener("DOMContentLoaded", () => {
      this.setup();
    });
  }
  setup() {
    const t = this.data?.session_data;
    J("playground-website.pageview", {
      session_id: this.data?.session_id || ""
    }), t?.is_paying_team || this.injectFreeWebsiteBanner();
  }
  injectFreeWebsiteBanner() {
    const n = `https://www.animaapp.com/an?url=https%3A%2F%2Fwww.animaapp.com&utm_content=${window.location.hostname}&utm_medium=anima-playground&utm_source=free-website-banner`, o = document.createElement("div");
    o.style.marginBottom = "48px", Vt(
      o,
      Pt({
        onStartNowClick: () => {
          J("playground-website.banner.start-now-click");
        },
        startNowUrl: n
      })
    ), document.body.prepend(o);
  }
}
const qt = new Jt();
export {
  qt as animaScripts
};
